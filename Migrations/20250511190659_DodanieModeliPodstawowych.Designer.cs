// <auto-generated />
using System;
using CRMCallCenter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CRMCallCenter.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250511190659_DodanieModeliPodstawowych")]
    partial class DodanieModeliPodstawowych
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CRMCallCenter.Models.Klienci.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PrzypisanyUzytkownikId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.Property<int>("ZepolId")
                        .HasColumnType("integer");

                    b.Property<int>("ZespolId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PrzypisanyUzytkownikId");

                    b.HasIndex("ZespolId");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Klienci.PolaczenieTelefoniczne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CzasTrwaniaSekundy")
                        .HasColumnType("integer");

                    b.Property<bool>("CzyNagrane")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("KlientId")
                        .HasColumnType("integer");

                    b.Property<string>("Notatka")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UrlNagrania")
                        .HasColumnType("text");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KlientId");

                    b.HasIndex("UzytkownikId");

                    b.ToTable("PolaczeniaTelefoniczne");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Transakcje.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cena")
                        .HasColumnType("numeric");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Produkty");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Transakcje.Transakcja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CzyZdalna")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataPodpisania")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Etap")
                        .HasColumnType("integer");

                    b.Property<int>("KlientId")
                        .HasColumnType("integer");

                    b.Property<int>("ProduktId")
                        .HasColumnType("integer");

                    b.Property<int>("UtworzonaPrzezId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KlientId");

                    b.HasIndex("ProduktId");

                    b.HasIndex("UtworzonaPrzezId");

                    b.ToTable("Tansakcje");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Uzytkownicy.Rola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Uzytkownicy.Uzytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HasloHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PrzelozonyId")
                        .HasColumnType("integer");

                    b.Property<int>("RolaId")
                        .HasColumnType("integer");

                    b.Property<int?>("ZespolId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PrzelozonyId");

                    b.HasIndex("RolaId");

                    b.HasIndex("ZespolId");

                    b.ToTable("Uzytkownicy");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Uzytkownicy.Zespol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Zespoly");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Klienci.Klient", b =>
                {
                    b.HasOne("CRMCallCenter.Models.Uzytkownicy.Uzytkownik", "PrzypisanyUzytkownik")
                        .WithMany()
                        .HasForeignKey("PrzypisanyUzytkownikId");

                    b.HasOne("CRMCallCenter.Models.Uzytkownicy.Zespol", "Zespol")
                        .WithMany("Klienci")
                        .HasForeignKey("ZespolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrzypisanyUzytkownik");

                    b.Navigation("Zespol");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Klienci.PolaczenieTelefoniczne", b =>
                {
                    b.HasOne("CRMCallCenter.Models.Klienci.Klient", "Klient")
                        .WithMany("PolaczeniaTelefoniczne")
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMCallCenter.Models.Uzytkownicy.Uzytkownik", "Uzytkownik")
                        .WithMany()
                        .HasForeignKey("UzytkownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Transakcje.Transakcja", b =>
                {
                    b.HasOne("CRMCallCenter.Models.Klienci.Klient", "Klient")
                        .WithMany("Transakcje")
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMCallCenter.Models.Transakcje.Produkt", "Produkt")
                        .WithMany("Transakcje")
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMCallCenter.Models.Uzytkownicy.Uzytkownik", "UtworzonaPrzez")
                        .WithMany()
                        .HasForeignKey("UtworzonaPrzezId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");

                    b.Navigation("Produkt");

                    b.Navigation("UtworzonaPrzez");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Uzytkownicy.Uzytkownik", b =>
                {
                    b.HasOne("CRMCallCenter.Models.Uzytkownicy.Uzytkownik", "Przelozony")
                        .WithMany("Podwladni")
                        .HasForeignKey("PrzelozonyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CRMCallCenter.Models.Uzytkownicy.Rola", "Rola")
                        .WithMany("Uzytkownicy")
                        .HasForeignKey("RolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMCallCenter.Models.Uzytkownicy.Zespol", null)
                        .WithMany("Uzytkownicy")
                        .HasForeignKey("ZespolId");

                    b.Navigation("Przelozony");

                    b.Navigation("Rola");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Klienci.Klient", b =>
                {
                    b.Navigation("PolaczeniaTelefoniczne");

                    b.Navigation("Transakcje");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Transakcje.Produkt", b =>
                {
                    b.Navigation("Transakcje");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Uzytkownicy.Rola", b =>
                {
                    b.Navigation("Uzytkownicy");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Uzytkownicy.Uzytkownik", b =>
                {
                    b.Navigation("Podwladni");
                });

            modelBuilder.Entity("CRMCallCenter.Models.Uzytkownicy.Zespol", b =>
                {
                    b.Navigation("Klienci");

                    b.Navigation("Uzytkownicy");
                });
#pragma warning restore 612, 618
        }
    }
}
